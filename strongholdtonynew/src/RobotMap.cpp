// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
std::shared_ptr<CANTalon> RobotMap::drivetrainLeftFrontMotor;
std::shared_ptr<CANTalon> RobotMap::drivetrainLeftRearMotor;
std::shared_ptr<CANTalon> RobotMap::drivetrainRightFrontMotor;
std::shared_ptr<CANTalon> RobotMap::drivetrainRightRearMotor;
std::shared_ptr<RobotDrive> RobotMap::drivetrainRobotDrive41;
std::shared_ptr<SpeedController> RobotMap::armMotor;
std::shared_ptr<AnalogPotentiometer> RobotMap::armPotentiometer;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION

void RobotMap::init() {
    printf("Running RobotMap init\n");

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    LiveWindow *lw = LiveWindow::GetInstance();

    drivetrainLeftFrontMotor.reset(new CANTalon(3));
    lw->AddActuator("Drivetrain", "LeftFrontMotor", drivetrainLeftFrontMotor);
    
    drivetrainLeftRearMotor.reset(new CANTalon(2));
    lw->AddActuator("Drivetrain", "LeftRearMotor", drivetrainLeftRearMotor);
    
    drivetrainRightFrontMotor.reset(new CANTalon(4));
    lw->AddActuator("Drivetrain", "RightFrontMotor", drivetrainRightFrontMotor);
    
    drivetrainRightRearMotor.reset(new CANTalon(1));
    lw->AddActuator("Drivetrain", "RightRearMotor", drivetrainRightRearMotor);
    
    drivetrainRobotDrive41.reset(new RobotDrive(drivetrainLeftFrontMotor, drivetrainLeftRearMotor,
              drivetrainRightFrontMotor, drivetrainRightRearMotor));
    
    drivetrainRobotDrive41->SetSafetyEnabled(true);
        drivetrainRobotDrive41->SetExpiration(0.1);
        drivetrainRobotDrive41->SetSensitivity(0.5);
        drivetrainRobotDrive41->SetMaxOutput(0.99);
        drivetrainRobotDrive41->SetInvertedMotor(RobotDrive::kFrontLeftMotor, true);
        drivetrainRobotDrive41->SetInvertedMotor(RobotDrive::kRearLeftMotor, true);
    armMotor.reset(new Talon(3));
    lw->AddActuator("Arm", "Motor", std::static_pointer_cast<Talon>(armMotor));
    
    armPotentiometer.reset(new AnalogPotentiometer(0, 1.0, 0.0));
    lw->AddSensor("Arm", "Potentiometer", armPotentiometer);
    


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
