// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

#include "BallManipulation.h"
#include "../RobotMap.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

BallManipulation::BallManipulation() :
		Subsystem("BallManipulation") {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	pivotMotor = RobotMap::ballManipulationPivotMotor;
	fetchMotor = RobotMap::ballManipulationFetchMotor;
	ballMotor21 = RobotMap::ballManipulationBallMotor21;

	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
}

void BallManipulation::InitDefaultCommand() {
	// Set the default command for a subsystem here.
	// SetDefaultCommand(new MySpecialCommand());
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}

// Put methods for controlling this subsystem
// here. Call these from Commands.

void BallManipulation::driveBallRelease() {
	printf("Drive ball release\n");
	//fetchMotor->Set(0.5);
}

void BallManipulation::driveBallHold() {
	printf("Drive ball hold\n");
	//fetchMotor->Set(-0.5);
}

void BallManipulation::driveBallPivotUp() {
	printf("drive ball pivot up\n");
	//pivotMotor->Set(0.5);
}

void BallManipulation::driveBallPivotDown() {
	printf("drive ball pivot down\n");
	//pivotMotor->Set(-0.5);
}

void BallManipulation::stop() {
	ballMotor21->Drive(0, 0);
}
