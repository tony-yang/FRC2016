// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

#include "BallReleaseCommand.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

BallReleaseCommand::BallReleaseCommand(bool release) :
		Command() {
	m_release = release;
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::ballManipulation.get());
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void BallReleaseCommand::Initialize() {

}

// Called repeatedly when this Command is scheduled to run
void BallReleaseCommand::Execute() {
	if (this->m_release == true) {
		Robot::ballManipulation->driveBallRelease();
	} else {
		Robot::ballManipulation->driveBallHold();
	}
}

// Make this return true when this Command no longer needs to run execute()
bool BallReleaseCommand::IsFinished() {
	return false;
}

// Called once after isFinished returns true
void BallReleaseCommand::End() {
	Robot::ballManipulation->stop();
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void BallReleaseCommand::Interrupted() {
	End();
}
